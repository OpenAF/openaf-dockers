name: Docker Images CI

on:
  #push:
  #  branches: [ "master" ]
  #pull_request:
  #  branches: [ "main" ]
  #schedule:
  #- cron: '30 6 * * *'
        
  workflow_dispatch:
    inputs:
      baseTag:
        description: 'The base image tag to use'
        required   : true
        default    : build
      oafDist:
        description: 'The openaf dist to use'
        required   : false
        default    : ''
      ubi:
        description: 'If defined will build using an ubi base image instead of alpine'
        required   : false
        default    : ''

jobs:

  build-nattrmon:
    needs: build-oaf
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/build-push-action@v4
      name: Build and push based on input
      if  : ${{ github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:nAttrMon"
        push: true
        tags: openaf/nattrmon:${{ github.event.inputs.baseTag }}
        build-args: url=openaf/oaf:${{ github.event.inputs.baseTag }}
    - uses: docker/build-push-action@v4
      name: Build and push
      if  : ${{ ! github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:nAttrMon"
        push: true
        tags: openaf/nattrmon:build
        build-args: url=openaf/oaf:build
        
  build-oaf:
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/build-push-action@v4
      name: Build and push based on input
      if  : ${{ github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:openaf"
        push: true
        tags: openaf/oaf:${{ github.event.inputs.baseTag }}
        build-args: | 
          DIST=${{ github.event.inputs.baseTag }}
          OPENAFDIST=${{ github.event.inputs.oafDist }}
    - uses: docker/build-push-action@v4
      name: Build and push based on input
      if  : ${{ github.event.inputs.baseTag && github.event.inputs.ubi == 'yes' }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:openaf-ubi"
        push: true
        tags: openaf/oaf:${{ github.event.inputs.baseTag }}
        build-args: | 
          DIST=${{ github.event.inputs.baseTag }}
          OPENAFDIST=${{ github.event.inputs.oafDist }}
    - uses: docker/build-push-action@v4
      name: Build and push
      if  : ${{ ! github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:openaf"
        push: true
        tags: openaf/oaf:build
        build-args: DIST=build
        
  build-openaf:
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/build-push-action@v4
      name: Build and push based on input
      if  : ${{ github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:openaf"
        push: true
        tags: openaf/openaf:${{ github.event.inputs.baseTag }}
        build-args: | 
          DIST=${{ github.event.inputs.baseTag }}
          OPENAFDIST=${{ github.event.inputs.oafDist }}
    - uses: docker/build-push-action@v4
      name: Build and push based on input
      if  : ${{ github.event.inputs.baseTag && github.event.inputs.ubi == 'yes' }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:openaf-ubi"
        push: true
        tags: openaf/openaf:${{ github.event.inputs.baseTag }}
        build-args: | 
          DIST=${{ github.event.inputs.baseTag }}
          OPENAFDIST=${{ github.event.inputs.oafDist }}
    - uses: docker/build-push-action@v4
      name: Build and push
      if  : ${{ ! github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:openaf"
        push: true
        tags: openaf/openaf:build
        build-args: DIST=build
        
  build-openaf-ojobc:
    needs: build-openaf
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/build-push-action@v4
      name: Build and push based on input
      if  : ${{ github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:oJobC"
        push: true
        tags: openaf/openaf-ojobc:${{ github.event.inputs.baseTag }}
        build-args: | 
          DIST=${{ github.event.inputs.baseTag }}
          OPENAFDIST=${{ github.event.inputs.oafDist }}
    - uses: docker/build-push-action@v4
      name: Build and push
      if  : ${{ ! github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:oJobC"
        push: true
        tags: openaf/openaf-ojobc:build
        build-args: DIST=build  
      
  build-ojobc:
    needs: build-openaf
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/build-push-action@v4
      name: Build and push based on input
      if  : ${{ github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:oJobC"
        push: true
        tags: openaf/ojobc:${{ github.event.inputs.baseTag }}
        build-args: | 
          DIST=${{ github.event.inputs.baseTag }}
          OPENAFDIST=${{ github.event.inputs.oafDist }}
    - uses: docker/build-push-action@v4
      name: Build and push
      if  : ${{ ! github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:oJobC"
        push: true
        tags: openaf/ojobc:build
        build-args: DIST=build       
      
  build-openaf-ojob:
    needs: build-openaf
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/build-push-action@v4
      name: Build and push based on input
      if  : ${{ github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:oJob"
        push: true
        tags: openaf/openaf-ojob:${{ github.event.inputs.baseTag }}
        build-args: | 
          DIST=${{ github.event.inputs.baseTag }}
          OPENAFDIST=${{ github.event.inputs.oafDist }}
    - uses: docker/build-push-action@v4
      name: Build and push
      if  : ${{ ! github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:oJob"
        push: true
        tags: openaf/openaf-ojob:build
        build-args: DIST=build        
      
  build-ojob:
    needs: build-openaf
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/build-push-action@v4
      name: Build and push based on input
      if  : ${{ github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:oJob"
        push: true
        tags: openaf/ojob:${{ github.event.inputs.baseTag }}
        build-args: | 
          DIST=${{ github.event.inputs.baseTag }}
          OPENAFDIST=${{ github.event.inputs.oafDist }}
    - uses: docker/build-push-action@v4
      name: Build and push
      if  : ${{ ! github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:oJob"
        push: true
        tags: openaf/ojob:build
        build-args: DIST=build     
  
  build-openaf-console:
    needs: build-openaf
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/build-push-action@v4
      name: Build and push based on input
      if  : ${{ github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:openaf-console"
        push: true
        tags: openaf/openaf-console:${{ github.event.inputs.baseTag }}
        build-args: | 
          DIST=${{ github.event.inputs.baseTag }}
          OPENAFDIST=${{ github.event.inputs.oafDist }}
    - uses: docker/build-push-action@v4
      name: Build and push
      if  : ${{ ! github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:openaf-console"
        push: true
        tags: openaf/openaf-console:build
        build-args: DIST=build        
      
  build-console:
    needs: build-openaf
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/build-push-action@v4
      name: Build and push based on input
      if  : ${{ github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:openaf-console"
        push: true
        tags: openaf/oafc:${{ github.event.inputs.baseTag }}
        build-args: | 
          DIST=${{ github.event.inputs.baseTag }}
          OPENAFDIST=${{ github.event.inputs.oafDist }}
    - uses: docker/build-push-action@v4
      name: Build and push
      if  : ${{ ! github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:openaf-console"
        push: true
        tags: openaf/oafc:build
        build-args: DIST=build     

  
  build-ojobrt:
    needs: build-openaf
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/build-push-action@v4
      name: Build and push based on input
      if  : ${{ github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:oJobRT"
        push: true
        tags: openaf/ojobrt:${{ github.event.inputs.baseTag }}
        build-args: | 
          DIST=${{ github.event.inputs.baseTag }}
          OPENAFDIST=${{ github.event.inputs.oafDist }}
    - uses: docker/build-push-action@v4
      name: Build and push
      if  : ${{ ! github.event.inputs.baseTag }}
      with:
        platforms: linux/amd64,linux/arm64
        context: "{{defaultContext}}:oJobRT"
        push: true
        tags: openaf/ojobrt:build
        build-args: DIST=build
